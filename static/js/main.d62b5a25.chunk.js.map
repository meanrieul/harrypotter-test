{"version":3,"sources":["Routes/Home/HomePresenter.js","Routes/Home/HomeContainer.js","Routes/Home/index.js","Components/checkbox.js","Routes/Question/QuestPresenter.js","Routes/Question/index.js","Routes/Question/QuestContainer.js","Routes/Result/ResultPresenter.js","Routes/Result/index.js","Routes/Result/ResultContainer.js","Components/Router.js","Components/App.js","index.js"],"names":["Title","styled","h1","Container","div","Form","form","Input","input","Button","button","Greeting","Start","Link","HomePresenter","userName","loading","handleSubmit","updateName","currentName","reset","onSubmit","placeholder","value","onChange","className","to","state","localStorage","removeItem","setState","event","preventDefault","saveLocalStorage","target","setItem","this","React","Component","HomeContainer","Checkbox","num","options","type","name","required","questions","title","Theme","Question","ButtonContainer","Save","Restart","Result","QuestPresenter","questionId","QuestContainer","props","id","score","parseInt","elements","window","location","replace","reload","match","params","Score","Bestfriend","Share","ResultPresenter","handleShare","copied","getItem","onClick","ResultContainer","element","document","createElement","host","setAttribute","style","position","left","body","appendChild","select","execCommand","removeChild","path","exact","component","Home","App","Router","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.d62b5a25.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Title = styled.h1`\r\n  margin-top: 100px;\r\n  font-size: 23px;\r\n`;\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 370px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  margin-bottom: 50px;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 100px;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  all: unset;\r\n  font-size: 28px;\r\n  width: 300px;\r\n`;\r\n\r\nconst Button = styled.button``;\r\n\r\nconst Greeting = styled.div`\r\n  height: 40px;\r\n  margin-bottom: 100px;\r\n`;\r\n\r\nconst Start = styled(Link)`\r\n  display: flex;\r\n  width: 200px;\r\n  height: 40px;\r\n  border: 2px solid black;\r\n  border-radius: 14px;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-decoration: none;\r\n  background-color: black;\r\n  color: white;\r\n  font-size: 20px;\r\n`;\r\n\r\nconst HomePresenter = ({\r\n  userName,\r\n  loading,\r\n  handleSubmit,\r\n  updateName,\r\n  currentName,\r\n  reset,\r\n}) =>\r\n  loading ? (\r\n    <>{reset()}</>\r\n  ) : (\r\n    <Container>\r\n      <Title>호그와트에 입학한 당신의 찐친은?</Title>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Input\r\n          placeholder=\"이름을 입력해주세요.\"\r\n          value={userName}\r\n          onChange={updateName}\r\n        />\r\n        <Button>저장</Button>\r\n      </Form>\r\n      <Greeting>{currentName && `안녕하세요, ${currentName}님!`}</Greeting>\r\n      <Start className=\"button\" to=\"/question/1\">\r\n        시작하기\r\n      </Start>\r\n    </Container>\r\n  );\r\n\r\nexport default HomePresenter;\r\n","import React from \"react\";\r\nimport HomePresenter from \"./HomePresenter\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    userName: \"\",\r\n    currentName: \"\",\r\n    loading: true,\r\n  };\r\n  reset = () => {\r\n    localStorage.removeItem(\"userName\");\r\n    localStorage.removeItem(\"score1\");\r\n    localStorage.removeItem(\"score2\");\r\n    localStorage.removeItem(\"score3\");\r\n    localStorage.removeItem(\"score4\");\r\n    localStorage.removeItem(\"score5\");\r\n    localStorage.removeItem(\"score6\");\r\n    localStorage.removeItem(\"score7\");\r\n    localStorage.removeItem(\"score8\");\r\n    this.setState({ loading: false });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { userName } = this.state;\r\n    if (userName !== \"\") {\r\n      this.saveLocalStorage();\r\n    }\r\n  };\r\n\r\n  updateName = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    this.setState({ userName: value });\r\n  };\r\n\r\n  saveLocalStorage = () => {\r\n    const { userName } = this.state;\r\n    localStorage.setItem(\"userName\", userName);\r\n    this.setState({ currentName: userName });\r\n  };\r\n\r\n  render() {\r\n    const { userName, currentName, loading } = this.state;\r\n    return (\r\n      <HomePresenter\r\n        userName={userName}\r\n        loading={loading}\r\n        handleSubmit={this.handleSubmit}\r\n        updateName={this.updateName}\r\n        currentName={currentName}\r\n        reset={this.reset}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import HomeContainer from \"./HomeContainer\";\r\nimport \"Components/style.css\";\r\nexport default HomeContainer;\r\n","import React from \"react\";\r\nimport \"Components/checkbox.css\";\r\n\r\nconst Checkbox = ({ num, options }) => (\r\n  <div className=\"checkbox\">\r\n    <label className=\"container\">\r\n      <input type=\"radio\" name={num} value={0} required />\r\n      <div className=\"checkmark\">\r\n        <span>{options[0]}</span>\r\n      </div>\r\n    </label>\r\n    <label className=\"container\">\r\n      <input type=\"radio\" name={num} value={1} />\r\n      <div className=\"checkmark\">\r\n        <span>{options[1]}</span>\r\n      </div>\r\n    </label>\r\n    <label className=\"container\">\r\n      <input type=\"radio\" name={num} value={2} />\r\n      <div className=\"checkmark\">\r\n        <span>{options[2]}</span>\r\n      </div>\r\n    </label>\r\n    <label className=\"container\">\r\n      <input type=\"radio\" name={num} value={3} />\r\n      <div className=\"checkmark\">\r\n        <span>{options[3]}</span>\r\n      </div>\r\n    </label>\r\n  </div>\r\n);\r\n\r\nexport default Checkbox;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Checkbox from \"Components/checkbox\";\r\n\r\nconst questions = [\r\n  {\r\n    title: \"질문1\",\r\n    options: [\"보기1\", \"보기2\", \"보기3\", \"보기4\"],\r\n  },\r\n  {\r\n    title: \"질문2\",\r\n    options: [\"보기1\", \"보기2\", \"보기3\", \"보기4\"],\r\n  },\r\n  {\r\n    title: \"질문3\",\r\n    options: [\"보기1\", \"보기2\", \"보기3\", \"보기4\"],\r\n  },\r\n  {\r\n    title: \"질문4\",\r\n    options: [\"보기1\", \"보기2\", \"보기3\", \"보기4\"],\r\n  },\r\n  {\r\n    title: \"질문5\",\r\n    options: [\"보기1\", \"보기2\", \"보기3\", \"보기4\"],\r\n  },\r\n  {\r\n    title: \"질문6\",\r\n    options: [\"보기1\", \"보기2\", \"보기3\", \"보기4\"],\r\n  },\r\n  {\r\n    title: \"질문7\",\r\n    options: [\"보기1\", \"보기2\", \"보기3\", \"보기4\"],\r\n  },\r\n  {\r\n    title: \"질문8\",\r\n    options: [\"보기1\", \"보기2\", \"보기3\", \"보기4\"],\r\n  },\r\n];\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 370px;\r\n`;\r\n\r\nconst Theme = styled.form`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst Question = styled.div`\r\n  margin-bottom: 50px;\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst Save = styled.button``;\r\n\r\nconst Title = styled.h1``;\r\n\r\nconst Restart = styled(Link)``;\r\n\r\nconst Result = styled.button``;\r\nconst QuestPresenter = ({ handleSubmit, questionId }) => (\r\n  <Container>\r\n    <Title>{`Question ${questionId}`}</Title>\r\n    <Theme onSubmit={handleSubmit}>\r\n      <h2>{questions[questionId - 1].title}</h2>\r\n      <Question>\r\n        <Checkbox num=\"Question\" options={questions[questionId - 1].options} />\r\n      </Question>\r\n      <ButtonContainer>\r\n        {questionId === \"8\" ? (\r\n          <Result>결과 보기</Result>\r\n        ) : (\r\n          <Save>다음 페이지로</Save>\r\n        )}\r\n\r\n        <Restart to=\"/\">다시하기!</Restart>\r\n      </ButtonContainer>\r\n    </Theme>\r\n  </Container>\r\n);\r\nexport default QuestPresenter;\r\n","import QuestContainer from \"./QuestContainer\";\r\nimport \"Components/style.css\";\r\n\r\nexport default QuestContainer;\r\n","import React from \"react\";\r\nimport QuestPresenter from \"./QuestPresenter\";\r\n\r\nexport default class extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const {\r\n      match: {\r\n        params: { id },\r\n      },\r\n    } = props;\r\n    this.state = { id };\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { id } = this.state;\r\n    const score = parseInt(event.target.elements.Question.value);\r\n    localStorage.setItem(`score${id}`, score);\r\n    if (id != \"8\") {\r\n      window.location.replace(`#/question/${parseInt(id) + 1}`);\r\n      window.location.reload();\r\n    } else {\r\n      window.location.replace(`#/result`);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { id } = this.state;\r\n    return <QuestPresenter handleSubmit={this.handleSubmit} questionId={id} />;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 370px;\r\n  margin-top: 100px;\r\n`;\r\n\r\nconst Score = styled.div``;\r\n\r\nconst Bestfriend = styled.div`\r\n  margin-top: 100px;\r\n`;\r\n\r\nconst Restart = styled(Link)`\r\n  margin-top: 100px;\r\n`;\r\n\r\nconst Share = styled.button`\r\n  margin-top: 100px;\r\n`;\r\nconst ResultPresenter = ({ handleShare, copied }) => (\r\n  <Container>\r\n    <div>\r\n      <Score>{`Score1: ${localStorage.getItem(\"score1\")}`}</Score>\r\n      <Score>{`Score2: ${localStorage.getItem(\"score2\")}`}</Score>\r\n      <Score>{`Score3: ${localStorage.getItem(\"score3\")}`}</Score>\r\n      <Score>{`Score4: ${localStorage.getItem(\"score4\")}`}</Score>\r\n      <Score>{`Score5: ${localStorage.getItem(\"score5\")}`}</Score>\r\n      <Score>{`Score6: ${localStorage.getItem(\"score6\")}`}</Score>\r\n      <Score>{`Score7: ${localStorage.getItem(\"score7\")}`}</Score>\r\n      <Score>{`Score8: ${localStorage.getItem(\"score8\")}`}</Score>\r\n      위와 같은 성격을 가진\r\n      {localStorage.getItem(\"userName\")\r\n        ? ` ${localStorage.getItem(\"userName\")}님의 베스트 프렌드는?`\r\n        : \" 당신의 베스트 프렌드는?\"}\r\n    </div>\r\n\r\n    <Bestfriend>입니다.</Bestfriend>\r\n    <Restart to=\"/\">다시하기!</Restart>\r\n    <Share id=\"share\" onClick={handleShare}>\r\n      친구들에게 이 테스트 공유하기\r\n    </Share>\r\n    {copied && \"클립보드 복사 완료\"}\r\n  </Container>\r\n);\r\n\r\nexport default ResultPresenter;\r\n","import ResultContainer from \"./ResultContainer\";\r\nimport \"Components/style.css\";\r\n\r\nexport default ResultContainer;\r\n","import React from \"react\";\r\nimport ResultPresenter from \"./ResultPresenter\";\r\n\r\nexport default class extends React.Component {\r\n  state = { copied: false };\r\n  handleShare = () => {\r\n    const element = document.createElement(\"textarea\");\r\n    element.value = `${window.location.host}/harrypotter-test`;\r\n    element.setAttribute(\"readonly\", \"\");\r\n    element.style.position = \"absolute\";\r\n    element.style.left = \"-9999px\";\r\n    document.body.appendChild(element);\r\n    element.select();\r\n    var returnValue = document.execCommand(\"copy\");\r\n    document.body.removeChild(element);\r\n    this.setState({ copied: true });\r\n  };\r\n  render() {\r\n    const { copied } = this.state;\r\n    return <ResultPresenter handleShare={this.handleShare} copied={copied} />;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route } from \"react-router-dom\";\r\nimport Home from \"Routes/Home\";\r\nimport Question from \"Routes/Question\";\r\nimport Result from \"Routes/Result\";\r\nexport default () => (\r\n  <Router>\r\n    <Route path=\"/\" exact component={Home} />\r\n    <Route path=\"/question/:id\" component={Question} />\r\n    <Route path=\"/result\" component={Result} />\r\n  </Router>\r\n);\r\n","import React, { Component } from \"react\";\nimport Router from \"Components/Router\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}